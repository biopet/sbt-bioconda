package nl.biopet.bioconda

import org.yaml.snakeyaml.Yaml

class BiocondaRecipe(name: String,
                     version: String,
                     sourceUrl: String,
                     sourceSha256: String,
                     runRequirements: Seq[String],
                     buildRequirements: Seq[String],
                     homeUrl: String,
                     license: String,
                     summary: String,
                     defaultJavaOptions: Seq[String],
                     buildNumber: Int = 0,
                     notes: String = "") {

  def fileName: String = sourceUrl.split("/").last
  def wrapperFile: String = s"$name.py"

  def metaYaml: String = {
    def yaml = new Yaml()
    def meta: Map[String,Any] = Map(
      "package" ->
        Map(
          "name" -> "{{ name }}",
          "version" -> "{{ version }}"
        ),
      "source" -> Map (
        "url" -> sourceUrl,
        "sha256" -> sourceSha256
      ),
      "build" -> Map(
        "number" -> buildNumber
      ),
      "requirements" -> Map(
        "run" -> runRequirements,
        "build" -> buildRequirements
      ),
      "about" -> Map(
        "home" -> homeUrl,
        "license" -> license,
        "summary" -> summary
      )
    )


    s"""# Based on OpenJDK recipe in conda-forge
       |# https://github.com/conda-forge/openjdk-feedstock/blob/master/recipe/meta.yaml
       |# This file was automatically generated by the sbt-bioconda plugin.
       |
       |{% set name = "$name" %}
       |{% set version = "$version" % }
       |
     """.stripMargin + yaml.dump(meta)
  }

  def buildScript: String =
    s"""#!/usr/bin/env bash
       |# Build file is copied from VarScan
       |# https://github.com/bioconda/bioconda-recipes/blob/master/recipes/varscan/build.sh
       |# This file was automatically generated by the sbt-bioconda plugin.
       |
       |outdir=$$PREFIX/share/$$PKG_NAME-$$PKG_VERSION-$$PKG_BUILDNUM
       |mkdir -p $$outdir
       |mkdir -p $$PREFIX/bin
       |cp $fileName $$outdir/$fileName
       |cp $$RECIPE_DIR/${wrapperFile} $$outdir/$name
     """.stripMargin

  def wrapperScript: String = {
      val wrapperStream =
        getClass.getResourceAsStream("nl/biopet/bioconda/wrapper.py")
      val javaOpts = new StringBuilder
      javaOpts.append("[")
      defaultJavaOptions.foreach(x => javaOpts.append("'" + x + "',"))
      javaOpts.append("]")
      s"""
         |#!/usr/bin/env python
         |#
         |# Wrapper script for starting the $name JAR package
         |#
         |# This script is written for use with the Conda package manager and is copied
         |# from the peptide-shaker wrapper. Only the parameters are changed.
         |# (https://github.com/bioconda/bioconda-recipes/blob/master/recipes/peptide-shaker/peptide-shaker.py)
         |#
         |# This file was automatically generated by the sbt-bioconda plugin.
         |
         |import os
         |import subprocess
         |import sys
         |import shutil
         |
         |from os import access
         |from os import getenv
         |from os import X_OK
         |
         |jar_file = '$fileName'
         |
         |default_jvm_mem_opts = $javaOpts
         |
         |# !!! End of parameter section. No user-serviceable code below this line !!!
         |
       """.stripMargin + scala.io.Source.fromInputStream(wrapperStream).mkString
    }


}
